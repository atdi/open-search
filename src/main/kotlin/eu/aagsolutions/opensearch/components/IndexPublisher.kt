package eu.aagsolutions.opensearch.components

import eu.aagsolutions.opensearch.model.Restaurant
import io.github.springwolf.core.asyncapi.annotations.AsyncMessage
import io.github.springwolf.core.asyncapi.annotations.AsyncOperation
import io.github.springwolf.core.asyncapi.annotations.AsyncPublisher
import io.github.springwolf.plugins.kafka.asyncapi.annotations.KafkaAsyncOperationBinding
import org.springframework.kafka.core.KafkaTemplate
import org.springframework.stereotype.Component
import org.springframework.kafka.support.mapping.AbstractJavaTypeMapper.DEFAULT_CLASSID_FIELD_NAME


@Component
class IndexPublisher(private val kafkaTemplate: KafkaTemplate<String, Restaurant>) {

    @AsyncPublisher(
        operation = AsyncOperation(
            channelName = "INDEX_TOPIC",
            description = "Outgoing topic",
            headers = AsyncOperation.Headers(
                schemaName = "SpringKafkaDefaultHeadersOutgoingPayloadDto",
                values = [
                    // this header is generated by Spring by default
                    AsyncOperation.Headers.Header(
                        name = DEFAULT_CLASSID_FIELD_NAME,
                        description = "Spring Type Id Header",
                        value = "eu.aagsolutions.opensearch.model.Restaurant"
                    )
                ]
            )
        )
    )
    @KafkaAsyncOperationBinding
    fun publish(restaurant: Restaurant) {
        kafkaTemplate.send("INDEX_TOPIC", restaurant)
    }
}